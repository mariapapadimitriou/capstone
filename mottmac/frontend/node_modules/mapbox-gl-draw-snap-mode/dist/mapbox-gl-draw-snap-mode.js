!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.mapboxGlDrawSnapMode=e():t.mapboxGlDrawSnapMode=e()}(this,(function(){return(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{SnapLineMode:()=>ie,SnapModeDrawStyles:()=>be,SnapPointMode:()=>Rt,SnapPolygonMode:()=>fe});const r="add",n="move",i="pointer",o="none",a="polygon",s="line_string",l="point",c="Feature",u="Polygon",p="LineString",f="Point",h="simple_select",d="draw.create",g="feature",y="vertex",m="true",v="false",b={enable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue("doubleClickZoom")&&t.map.doubleClickZoom.enable()}),0)},disable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}};function w(t){const e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===y)}function x(t){return 27===t.keyCode}function M(t){return 13===t.keyCode}const P={onSetup:function(){const t=this.newFeature({type:c,properties:{},geometry:{type:f,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:r}),this.activateUIButton(l),this.setActionableState({trash:!0}),{point:t}},stopDrawingAndRemove:function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(h)}};P.onTap=P.onClick=function(t,e){this.updateUIClasses({mouse:n}),t.point.updateCoordinate("",e.lngLat.lng,e.lngLat.lat),this.map.fire(d,{features:[t.point.toGeoJSON()]}),this.changeMode(h,{featureIds:[t.point.id]})},P.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},P.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.point.id;if(e.properties.active=n?m:v,!n)return r(e)},P.onTrash=P.stopDrawingAndRemove,P.onKeyUp=function(t,e){if(x(e)||M(e))return this.stopDrawingAndRemove(t,e)};const S=P;var O=6371008.8,j={meters:O,metres:O,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:O/1852,inches:39.37*O,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274};function E(t,e,r){if(!X(r=r||{}))throw new Error("options is invalid");var n=r.bbox,i=r.id;if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&D(n),i&&U(i);var o={type:"Feature"};return i&&(o.id=i),n&&(o.bbox=n),o.properties=e||{},o.geometry=t,o}function C(t,e,r){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!Y(t[0])||!Y(t[1]))throw new Error("coordinates must contain numbers");return E({type:"Point",coordinates:t},e,r)}function L(t,e,r){if(!t)throw new Error("coordinates is required");for(var n=0;n<t.length;n++){var i=t[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var o=0;o<i[i.length-1].length;o++){if(0===n&&0===o&&!Y(i[0][0])||!Y(i[0][1]))throw new Error("coordinates must contain numbers");if(i[i.length-1][o]!==i[0][o])throw new Error("First and last Position are not equivalent.")}}return E({type:"Polygon",coordinates:t},e,r)}function A(t,e,r){if(!t)throw new Error("coordinates is required");if(t.length<2)throw new Error("coordinates must be an array of two or more positions");if(!Y(t[0][1])||!Y(t[0][1]))throw new Error("coordinates must contain numbers");return E({type:"LineString",coordinates:t},e,r)}function F(t,e){if(!X(e=e||{}))throw new Error("options is invalid");var r=e.bbox,n=e.id;if(!t)throw new Error("No features passed");if(!Array.isArray(t))throw new Error("features must be an Array");r&&D(r),n&&U(n);var i={type:"FeatureCollection"};return n&&(i.id=n),r&&(i.bbox=r),i.features=t,i}function k(t,e,r){if(!t)throw new Error("coordinates is required");return E({type:"MultiLineString",coordinates:t},e,r)}function _(t,e){if(null==t)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=j[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t*r}function I(t,e){if(null==t)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=j[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t/r}function V(t){if(null==t)throw new Error("radians is required");return 180*(t%(2*Math.PI))/Math.PI}function B(t){if(null==t)throw new Error("degrees is required");return t%360*Math.PI/180}function Y(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function X(t){return!!t&&t.constructor===Object}function D(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!Y(t))throw new Error("bbox must only contain numbers")}))}function U(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}const $=function(t){D(t);var e=Number(t[0]),r=Number(t[1]),n=Number(t[2]),i=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var o=[e,r];return L([[o,[n,r],[n,i],[e,i],o]])};function G(t){if(!t)throw new Error("obj is required");var e=q(t);if(e.length>1&&Y(e[0])&&Y(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function q(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return T(e),e;throw new Error("No valid coordinates")}function T(t){if(t.length>1&&Y(t[0])&&Y(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return T(t[0]);throw new Error("coordinates must only contain numbers")}function N(t,e,r){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var i=0,o=e.length-1;i<e.length;o=i++){var a=e[i][0],s=e[i][1],l=e[o][0],c=e[o][1];if(t[1]*(a-l)+s*(l-t[0])+c*(t[0]-a)==0&&(a-t[0])*(l-t[0])<=0&&(s-t[1])*(c-t[1])<=0)return!r;s>t[1]!=c>t[1]&&t[0]<(l-a)*(t[1]-s)/(c-s)+a&&(n=!n)}return n}const z=function(t,e,r){if("object"!=typeof(r=r||{}))throw new Error("options is invalid");var n=r.ignoreBoundary;if(!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var i=G(t),o=q(e),a=e.geometry?e.geometry.type:e.type,s=e.bbox;if(s&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(i,s))return!1;"Polygon"===a&&(o=[o]);for(var l=0,c=!1;l<o.length&&!c;l++)if(N(i,o[l][0],n)){for(var u=!1,p=1;p<o[l].length&&!u;)N(i,o[l][p],!n)&&(u=!0),p++;u||(c=!0)}return c};function J(t,e,r){if(null!==t)for(var n,i,o,a,s,l,c,u,p=0,f=0,h=t.type,d="FeatureCollection"===h,g="Feature"===h,y=d?t.features.length:1,m=0;m<y;m++){s=(u=!!(c=d?t.features[m].geometry:g?t.geometry:t)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var v=0;v<s;v++){var b=0,w=0;if(null!==(a=u?c.geometries[v]:c)){l=a.coordinates;var x=a.type;switch(p=!r||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":e(l,f,m,b,w),f++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++)e(l[n],f,m,b,w),f++,"MultiPoint"===x&&b++;"LineString"===x&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-p;i++)e(l[n][i],f,m,b,w),f++;"MultiLineString"===x&&b++,"Polygon"===x&&w++}"Polygon"===x&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for("MultiPolygon"===x&&(w=0),i=0;i<l[n].length;i++){for(o=0;o<l[n][i].length-p;o++)e(l[n][i][o],f,m,b,w),f++;w++}b++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)J(a.geometries[n],e,r);break;default:throw new Error("Unknown Geometry Type")}}}}}function R(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length;r++)e(t.features[r],r)}function Z(t,e){var r,n,i,o,a,s,l,c,u,p,f=0,h="FeatureCollection"===t.type,d="Feature"===t.type,g=h?t.features.length:1;for(r=0;r<g;r++){for(s=h?t.features[r].geometry:d?t.geometry:t,c=h?t.features[r].properties:d?t.properties:{},u=h?t.features[r].bbox:d?t.bbox:void 0,p=h?t.features[r].id:d?t.id:void 0,a=(l=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,i=0;i<a;i++)if(null!==(o=l?s.geometries[i]:s))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(o,f,c,u,p);break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)e(o.geometries[n],f,c,u,p);break;default:throw new Error("Unknown Geometry Type")}else e(null,f,c,u,p);f++}}function H(t,e){Z(t,(function(t,r,n,i,o){var a,s=null===t?null:t.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return void e(E(t,n,{bbox:i,id:o}),r,0)}switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}t.coordinates.forEach((function(t,i){e(E({type:a,coordinates:t},n),r,i)}))}))}function K(t,e,r,n,i){for(;n>r;){if(n-r>600){var o=n-r+1,a=e-r+1,s=Math.log(o),l=.5*Math.exp(2*s/3),c=.5*Math.sqrt(s*l*(o-l)/o)*(a-o/2<0?-1:1);K(t,e,Math.max(r,Math.floor(e-a*l/o+c)),Math.min(n,Math.floor(e+(o-a)*l/o+c)),i)}var u=t[e],p=r,f=n;for(Q(t,r,e),i(t[n],u)>0&&Q(t,r,n);p<f;){for(Q(t,p,f),p++,f--;i(t[p],u)<0;)p++;for(;i(t[f],u)>0;)f--}0===i(t[r],u)?Q(t,r,f):Q(t,++f,n),f<=e&&(r=f+1),e<=f&&(n=f-1)}}function Q(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function W(t,e){return t<e?-1:t>e?1:0}const tt=function(t,e,r,n,i){K(t,e,r||0,n||t.length-1,i||W)};function et(t,e){if(!(this instanceof et))return new et(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function rt(t,e,r){if(!r)return e.indexOf(t);for(var n=0;n<e.length;n++)if(r(t,e[n]))return n;return-1}function nt(t,e){it(t,0,t.children.length,e,t)}function it(t,e,r,n,i){i||(i=ft(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,a=e;a<r;a++)o=t.children[a],ot(i,t.leaf?n(o):o);return i}function ot(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function at(t,e){return t.minX-e.minX}function st(t,e){return t.minY-e.minY}function lt(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function ct(t){return t.maxX-t.minX+(t.maxY-t.minY)}function ut(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function pt(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function ft(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function ht(t,e,r,n,i){for(var o,a=[e,r];a.length;)(r=a.pop())-(e=a.pop())<=n||(o=e+Math.ceil((r-e)/n/2)*n,tt(t,o,e,r,i),a.push(e,o,o,r))}et.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,r=[],n=this.toBBox;if(!pt(t,e))return r;for(var i,o,a,s,l=[];e;){for(i=0,o=e.children.length;i<o;i++)a=e.children[i],pt(t,s=e.leaf?n(a):a)&&(e.leaf?r.push(a):ut(t,s)?this._all(a,r):l.push(a));e=l.pop()}return r},collides:function(t){var e=this.data,r=this.toBBox;if(!pt(t,e))return!1;for(var n,i,o,a,s=[];e;){for(n=0,i=e.children.length;n<i;n++)if(o=e.children[n],pt(t,a=e.leaf?r(o):o)){if(e.leaf||ut(t,a))return!0;s.push(o)}e=s.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,r=t.length;e<r;e++)this.insert(t[e]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var i=this.data;this.data=n,n=i}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=ft([]),this},remove:function(t,e){if(!t)return this;for(var r,n,i,o,a=this.data,s=this.toBBox(t),l=[],c=[];a||l.length;){if(a||(a=l.pop(),n=l[l.length-1],r=c.pop(),o=!0),a.leaf&&-1!==(i=rt(t,a.children,e)))return a.children.splice(i,1),l.push(a),this._condense(l),this;o||a.leaf||!ut(a,s)?n?(r++,a=n.children[r],o=!1):a=null:(l.push(a),c.push(r),r=0,n=a,a=a.children[0])}return this},toBBox:function(t){return t},compareMinX:at,compareMinY:st,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var r=[];t;)t.leaf?e.push.apply(e,t.children):r.push.apply(r,t.children),t=r.pop();return e},_build:function(t,e,r,n){var i,o=r-e+1,a=this._maxEntries;if(o<=a)return nt(i=ft(t.slice(e,r+1)),this.toBBox),i;n||(n=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,n-1))),(i=ft([])).leaf=!1,i.height=n;var s,l,c,u,p=Math.ceil(o/a),f=p*Math.ceil(Math.sqrt(a));for(ht(t,e,r,f,this.compareMinX),s=e;s<=r;s+=f)for(ht(t,s,c=Math.min(s+f-1,r),p,this.compareMinY),l=s;l<=c;l+=p)u=Math.min(l+p-1,c),i.children.push(this._build(t,l,u,n-1));return nt(i,this.toBBox),i},_chooseSubtree:function(t,e,r,n){for(var i,o,a,s,l,c,u,p,f,h;n.push(e),!e.leaf&&n.length-1!==r;){for(u=p=1/0,i=0,o=e.children.length;i<o;i++)l=lt(a=e.children[i]),f=t,h=a,(c=(Math.max(h.maxX,f.maxX)-Math.min(h.minX,f.minX))*(Math.max(h.maxY,f.maxY)-Math.min(h.minY,f.minY))-l)<p?(p=c,u=l<u?l:u,s=a):c===p&&l<u&&(u=l,s=a);e=s||e.children[0]}return e},_insert:function(t,e,r){var n=this.toBBox,i=r?t:n(t),o=[],a=this._chooseSubtree(i,this.data,e,o);for(a.children.push(t),ot(a,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var r=t[e],n=r.children.length,i=this._minEntries;this._chooseSplitAxis(r,i,n);var o=this._chooseSplitIndex(r,i,n),a=ft(r.children.splice(o,r.children.length-o));a.height=r.height,a.leaf=r.leaf,nt(r,this.toBBox),nt(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(r,a)},_splitRoot:function(t,e){this.data=ft([t,e]),this.data.height=t.height+1,this.data.leaf=!1,nt(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,r){var n,i,o,a,s,l,c,u,p,f,h,d,g,y;for(l=c=1/0,n=e;n<=r-e;n++)i=it(t,0,n,this.toBBox),o=it(t,n,r,this.toBBox),p=i,f=o,h=void 0,d=void 0,g=void 0,y=void 0,h=Math.max(p.minX,f.minX),d=Math.max(p.minY,f.minY),g=Math.min(p.maxX,f.maxX),y=Math.min(p.maxY,f.maxY),a=Math.max(0,g-h)*Math.max(0,y-d),s=lt(i)+lt(o),a<l?(l=a,u=n,c=s<c?s:c):a===l&&s<c&&(c=s,u=n);return u},_chooseSplitAxis:function(t,e,r){var n=t.leaf?this.compareMinX:at,i=t.leaf?this.compareMinY:st;this._allDistMargin(t,e,r,n)<this._allDistMargin(t,e,r,i)&&t.children.sort(n)},_allDistMargin:function(t,e,r,n){t.children.sort(n);var i,o,a=this.toBBox,s=it(t,0,e,a),l=it(t,r-e,r,a),c=ct(s)+ct(l);for(i=e;i<r-e;i++)o=t.children[i],ot(s,t.leaf?a(o):o),c+=ct(s);for(i=r-e-1;i>=e;i--)o=t.children[i],ot(l,t.leaf?a(o):o),c+=ct(l);return c},_adjustParentBBoxes:function(t,e,r){for(var n=r;n>=0;n--)ot(e[n],t)},_condense:function(t){for(var e,r=t.length-1;r>=0;r--)0===t[r].children.length?r>0?(e=t[r-1].children).splice(e.indexOf(t[r]),1):this.clear():nt(t[r],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};const dt=et;function gt(t){var e=[t[0],t[1]],r=[t[0],t[3]],n=[t[2],t[3]];return{type:"Feature",bbox:t,properties:{},geometry:{type:"Polygon",coordinates:[[e,[t[2],t[1]],n,r,e]]}}}function yt(t){var e=[1/0,1/0,-1/0,-1/0];return J(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}const mt=function(t){var e=dt(t);return e.insert=function(t){if(Array.isArray(t)){var e=t;(t=gt(e)).bbox=e}else t.bbox=t.bbox?t.bbox:yt(t);return dt.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach((function(t){var r=gt(t);r.bbox=t,e.push(r)})):R(t,(function(t){t.bbox=t.bbox?t.bbox:yt(t),e.push(t)})),dt.prototype.load.call(this,e)},e.remove=function(t){if(Array.isArray(t)){var e=t;(t=gt(e)).bbox=e}return dt.prototype.remove.call(this,t)},e.clear=function(){return dt.prototype.clear.call(this)},e.search=function(t){return{type:"FeatureCollection",features:dt.prototype.search.call(this,this.toBBox(t))}},e.collides=function(t){return dt.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return{type:"FeatureCollection",features:dt.prototype.all.call(this)}},e.toJSON=function(){return dt.prototype.toJSON.call(this)},e.fromJSON=function(t){return dt.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;return{minX:(e=t.bbox?t.bbox:Array.isArray(t)&&4===t.length?t:yt(t))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e};const vt=function(t){if(!t)throw new Error("geojson is required");var e=[];return H(t,(function(t){!function(t,e){var r=[],n=t.geometry;switch(n.type){case"Polygon":r=q(n);break;case"LineString":r=[q(n)]}r.forEach((function(r){(function(t,e){var r=[];return t.reduce((function(t,n){var i,o,a,s,l,c,u=A([t,n],e);return u.bbox=(o=n,a=(i=t)[0],s=i[1],l=o[0],c=o[1],[a<l?a:l,s<c?s:c,a>l?a:l,s>c?s:c]),r.push(u),n})),r})(r,t.properties).forEach((function(t){t.id=e.length,e.push(t)}))}))}(t,e)})),F(e)};function bt(t,e){var r=q(t),n=q(e);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=r[0][0],o=r[0][1],a=r[1][0],s=r[1][1],l=n[0][0],c=n[0][1],u=n[1][0],p=n[1][1],f=(p-c)*(a-i)-(u-l)*(s-o),h=(u-l)*(o-c)-(p-c)*(i-l),d=(a-i)*(o-c)-(s-o)*(i-l);if(0===f)return null;var g=h/f,y=d/f;return g>=0&&g<=1&&y>=0&&y<=1?C([i+g*(a-i),o+g*(s-o)]):null}const wt=function(t,e){var r={},n=[];if("LineString"===t.type&&(t=E(t)),"LineString"===e.type&&(e=E(e)),"Feature"===t.type&&"Feature"===e.type&&"LineString"===t.geometry.type&&"LineString"===e.geometry.type&&2===t.geometry.coordinates.length&&2===e.geometry.coordinates.length){var i=bt(t,e);return i&&n.push(i),F(n)}var o=mt();return o.load(vt(e)),R(vt(t),(function(t){R(o.search(t),(function(e){var i=bt(t,e);if(i){var o=q(i).join(",");r[o]||(r[o]=!0,n.push(i))}}))})),F(n)};function xt(t,e){return t.length>1?k(t,e):A(t[0],e)}const Mt=function(t,e){if(!X(e=e||{}))throw new Error("options is invalid");var r=e.properties,n=function(t,e){if(!t)throw new Error((e||"geojson")+" is required");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||"geojson")+" is invalid")}(t),i=q(t);if(r=r||t.properties||{},!i.length)throw new Error("polygon must contain coordinates");switch(n){case"Polygon":return xt(i,r);case"MultiPolygon":var o=[];return i.forEach((function(t){o.push(xt(t,r))})),F(o);default:throw new Error("geom "+n+" not supported")}};function Pt(t,e){for(var r=0;r<t.coordinates.length-1;r++)if(Ot(t.coordinates[r],t.coordinates[r+1],e.coordinates))return!0;return!1}function St(t,e){for(var r=0;r<e.coordinates.length;r++)if(z(e.coordinates[r],t))return!0;return wt(e,Mt(t)).features.length>0}function Ot(t,e,r){var n=r[0]-t[0],i=r[1]-t[1],o=e[0]-t[0],a=e[1]-t[1];return 0==n*a-i*o&&(Math.abs(o)>=Math.abs(a)?o>0?t[0]<=r[0]&&r[0]<=e[0]:e[0]<=r[0]&&r[0]<=t[0]:a>0?t[1]<=r[1]&&r[1]<=e[1]:e[1]<=r[1]&&r[1]<=t[1])}const jt=function(t,e){var r;return H(t,(function(t){H(e,(function(e){if(!1===r)return!1;r=function(t,e){switch(t.type){case"Point":switch(e.type){case"Point":return r=t.coordinates,n=e.coordinates,!(r[0]===n[0]&&r[1]===n[1]);case"LineString":return!Pt(e,t);case"Polygon":return!z(t,e)}break;case"LineString":switch(e.type){case"Point":return!Pt(t,e);case"LineString":return!function(t,e){if(wt(t,e).features.length>0)return!0;return!1}(t,e);case"Polygon":return!St(e,t)}break;case"Polygon":switch(e.type){case"Point":return!z(e,t);case"LineString":return!St(t,e);case"Polygon":return!function(t,e){for(var r=0;r<t.coordinates[0].length;r++)if(z(t.coordinates[0][r],e))return!0;for(var n=0;n<e.coordinates[0].length;n++)if(z(e.coordinates[0][n],t))return!0;if(wt(Mt(t),Mt(e)).features.length>0)return!0;return!1}(e,t)}}var r,n}(t.geometry,e.geometry)}))})),r};const Et=function(t,e,r){if(!X(r=r||{}))throw new Error("options is invalid");var n=r.units,i=G(t),o=G(e),a=B(o[1]-i[1]),s=B(o[0]-i[0]),l=B(i[1]),c=B(o[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(l)*Math.cos(c);return _(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),n)};function Ct(t,e,r){if(!X(r=r||{}))throw new Error("options is invalid");if(!0===r.final)return function(t,e){var r=Ct(e,t);return r=(r+180)%360}(t,e);var n=G(t),i=G(e),o=B(n[0]),a=B(i[0]),s=B(n[1]),l=B(i[1]),c=Math.sin(a-o)*Math.cos(l),u=Math.cos(s)*Math.sin(l)-Math.sin(s)*Math.cos(l)*Math.cos(a-o);return V(Math.atan2(c,u))}const Lt=Ct;const At=function(t,e,r,n){if(!X(n=n||{}))throw new Error("options is invalid");var i=n.units,o=n.properties,a=G(t),s=B(a[0]),l=B(a[1]),c=B(r),u=I(e,i),p=Math.asin(Math.sin(l)*Math.cos(u)+Math.cos(l)*Math.sin(u)*Math.cos(c));return C([V(s+Math.atan2(Math.sin(c)*Math.sin(u)*Math.cos(l),Math.cos(u)-Math.sin(l)*Math.sin(p))),V(p)],o)};const Ft=function(t,e,r){if(!X(r=r||{}))throw new Error("options is invalid");var n=t.geometry?t.geometry.type:t.type;if("LineString"!==n&&"MultiLineString"!==n)throw new Error("lines must be LineString or MultiLineString");var i=C([1/0,1/0],{dist:1/0}),o=0;return H(t,(function(t){for(var n=q(t),a=0;a<n.length-1;a++){var s=C(n[a]);s.properties.dist=Et(e,s,r);var l=C(n[a+1]);l.properties.dist=Et(e,l,r);var c=Et(s,l,r),u=Math.max(s.properties.dist,l.properties.dist),p=Lt(s,l),f=At(e,u,p+90,r),h=At(e,u,p-90,r),d=wt(A([f.geometry.coordinates,h.geometry.coordinates]),A([s.geometry.coordinates,l.geometry.coordinates])),g=null;d.features.length>0&&((g=d.features[0]).properties.dist=Et(e,g,r),g.properties.location=o+Et(s,g,r)),s.properties.dist<i.properties.dist&&((i=s).properties.index=a,i.properties.location=o),l.properties.dist<i.properties.dist&&((i=l).properties.index=a+1,i.properties.location=o+c),g&&g.properties.dist<i.properties.dist&&((i=g).properties.index=a),o+=c}})),i};const kt=function(t,e){var r=Et(t,e),n=Lt(t,e);return At(t,r/2,n)};function _t(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,i,o=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return It(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return It(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function It(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Vt="VERTICAL_GUIDE",Bt="HORIZONTAL_GUIDE",Yt=function(t,e,r,n){var i=t.getCanvas(),o=i.width,a=i.height,s=t.project(r),l=s.x,c=s.y;(l>0&&l<o&&c>0&&c<a||n)&&e.push(r)},Xt=function(t,e,r){var n,i,o,a,s,l=e.getAll().features,c=[],p=(n=t.getCanvas(),i=n.width,o=n.height,t.unproject([0,0]).toArray(),a=t.unproject([i,0]).toArray(),t.unproject([i,o]).toArray(),s=t.unproject([0,o]).toArray(),$([s,a].flat())),f=[],h=function e(r){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!Array.isArray(r))throw Error("Your array is not an array");Array.isArray(r[0])?r.forEach((function(t){e(t)})):2===r.length&&Yt(t,f,r,n)};return l.forEach((function(t){t.id!==r.id?t.id!==Bt&&t.id!==Vt&&(h(t.geometry.coordinates),jt(p,t)||c.push(t)):r.type===u&&h(t.geometry.coordinates[0].slice(0,-2),!0)})),[c,f]},Dt=function(t,e){var r={};return e.forEach((function(e,n){var i=function(t,e){var r=[t.lng,t.lat],n="Point"===e.geometry.type,i="Polygon"===e.geometry.type,o=void 0,a=q(e);if(n){var s=_t(a,2);return{latlng:{lng:s[0],lat:s[1]},distance:Et(a,r)}}o=i?Mt(e):e;var l=Ft(o,r),c=_t(l.geometry.coordinates,2),u=c[0],p=c[1],f=l.properties.index;return f+1===o.geometry.coordinates.length&&f--,{latlng:{lng:u,lat:p},segment:o.geometry.coordinates.slice(f,f+2),distance:l.properties.dist,isMarker:n}}(t,e);(void 0===r.distance||i.distance<r.distance)&&((r=i).layer=e)})),r},Ut=function(t,e){var r,n,i,o,a,s,l,c,u,p,f,h,d=e.lngLat.lng,g=e.lngLat.lat;if(e.originalEvent.altKey)return t.showVerticalSnapLine=!1,t.showHorizontalSnapLine=!1,{lng:d,lat:g};if(t.snapList.length<=0)return{lng:d,lat:g};if(t.options.snap){if(r=Dt({lng:d,lat:g},t.snapList),0===Object.keys(r).length)return!1;var y=r.isMarker,m=t.options.snapOptions?t.options.snapOptions.snapVertexPriorityDistance:void 0;i=y?r.latlng:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.25,n=t.segment[0],i=t.segment[1],o=[t.latlng.lng,t.latlng.lat],a=Et(n,o),s=Et(i,o),l=a<s?n:i,c=a<s?a:s;if(e&&e.snapToMidPoints){var u=kt(n,i).geometry.coordinates,p=Et(u,o);p<a&&p<s&&(l=u,c=p)}var f=_t(c<r?l:o,2),h=f[0],d=f[1];return{lng:h,lat:d}}(r,t.options.snapOptions,m),n=(t.options.snapOptions&&t.options.snapOptions.snapPx||15)*(o=i.lat,a=t.map.getZoom(),s=o*(Math.PI/180),40075017*Math.cos(s)/Math.pow(2,a+8))}if(t.options.guides){var v=(u=t.vertices,p=e.lngLat,f=[],h=[],u.forEach((function(t){f.push(t[0]),h.push(t[1])})),{verticalPx:f.find((function(t){return Math.abs(t-p.lng)<.009})),horizontalPx:h.find((function(t){return Math.abs(t-p.lat)<.009}))});if(c=v.horizontalPx,l=v.verticalPx){var b={lng:l,lat:e.lngLat.lat+10},w={lng:l,lat:e.lngLat.lat-10};t.verticalGuide.updateCoordinate(0,b.lng,b.lat),t.verticalGuide.updateCoordinate(1,w.lng,w.lat)}if(c){var x={lng:e.lngLat.lng+10,lat:c},M={lng:e.lngLat.lng-10,lat:c};t.horizontalGuide.updateCoordinate(0,x.lng,x.lat),t.horizontalGuide.updateCoordinate(1,M.lng,M.lat)}t.showVerticalSnapLine=!!l,t.showHorizontalSnapLine=!!c}return r&&1e3*r.distance<n?i:l||c?(l&&(d=l),c&&(g=c),{lng:d,lat:g}):{lng:d,lat:g}},$t=function(t){return{id:t,type:c,properties:{isSnapGuide:"true"},geometry:{type:p,coordinates:[]}}},Gt=function(t,e){return!(e.properties.id!==Vt||t.options.guides&&t.showVerticalSnapLine)||!(e.properties.id!==Bt||t.options.guides&&t.showHorizontalSnapLine)};function qt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,i,o=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return Tt(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Tt(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Nt(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function zt(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Jt=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?Nt(Object(r),!0).forEach((function(e){zt(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):Nt(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},S);Jt.onSetup=function(t){var e=this,r=this.newFeature({type:c,properties:{},geometry:{type:f,coordinates:[[]]}}),n=this.newFeature($t(Vt)),i=this.newFeature($t(Bt));this.addFeature(r),this.addFeature(n),this.addFeature(i);var o=this.getSelected();this.clearSelectedFeatures(),b.disable(this);var a=qt(Xt(this.map,this._ctx.api,r),2),s=a[0],l=a[1],u={map:this.map,point:r,vertices:l,snapList:s,selectedFeatures:o,verticalGuide:n,horizontalGuide:i};u.options=this._ctx.options;var p=function(){var t=qt(Xt(e.map,e._ctx.api,r),2),n=t[0],i=t[1];u.vertices=i,u.snapList=n};u.moveendCallback=p;var h=function(t){u.options=t};return u.optionsChangedCallBAck=h,this.map.on("moveend",p),this.map.on("draw.snap.options_changed",h),u},Jt.onClick=function(t){S.onClick.call(this,t,{lngLat:{lng:t.snappedLng,lat:t.snappedLat}})},Jt.onMouseMove=function(t,e){var n=Ut(t,e),o=n.lng,a=n.lat;t.snappedLng=o,t.snappedLat=a,t.lastVertex&&t.lastVertex[0]===o&&t.lastVertex[1]===a?this.updateUIClasses({mouse:i}):this.updateUIClasses({mouse:r})},Jt.toDisplayFeatures=function(t,e,r){Gt(t,e)||S.toDisplayFeatures(t,e,r)},Jt.onStop=function(t){this.deleteFeature(Vt,{silent:!0}),this.deleteFeature(Bt,{silent:!0}),this.map.off("moveend",t.moveendCallback),S.onStop.call(this,t)};const Rt=Jt;const Zt=function(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])};function Ht(t,e,r,n){return{type:c,properties:{meta:y,parent:t,coord_path:r,active:n?m:v},geometry:{type:f,coordinates:e}}}const Kt={onSetup:function(t){const e=(t=t||{}).featureId;let n,i,o="forward";if(e){if(n=this.getFeature(e),!n)throw new Error("Could not find a feature with the provided featureId");let r=t.from;if(r&&"Feature"===r.type&&r.geometry&&"Point"===r.geometry.type&&(r=r.geometry),r&&"Point"===r.type&&r.coordinates&&2===r.coordinates.length&&(r=r.coordinates),!r||!Array.isArray(r))throw new Error("Please use the `from` property to indicate which point to continue the line from");const a=n.coordinates.length-1;if(n.coordinates[a][0]===r[0]&&n.coordinates[a][1]===r[1])i=a+1,n.addCoordinate(i,...n.coordinates[a]);else{if(n.coordinates[0][0]!==r[0]||n.coordinates[0][1]!==r[1])throw new Error("`from` should match the point at either the start or the end of the provided LineString");o="backwards",i=0,n.addCoordinate(i,...n.coordinates[0])}}else n=this.newFeature({type:c,properties:{},geometry:{type:p,coordinates:[]}}),i=0,this.addFeature(n);return this.clearSelectedFeatures(),b.disable(this),this.updateUIClasses({mouse:r}),this.activateUIButton(s),this.setActionableState({trash:!0}),{line:n,currentVertexPosition:i,direction:o}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&Zt(e,t.line.coordinates[t.currentVertexPosition-1])||"backwards"===t.direction&&Zt(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(h,{featureIds:[t.line.id]});this.updateUIClasses({mouse:r}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),"forward"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),w(e)&&this.updateUIClasses({mouse:i})}};Kt.onTap=Kt.onClick=function(t,e){if(w(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},Kt.onKeyUp=function(t,e){M(e)?this.changeMode(h,{featureIds:[t.line.id]}):x(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h))},Kt.onStop=function(t){b.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(`${t.currentVertexPosition}`),t.line.isValid()?this.map.fire(d,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h,{},{silent:!0})))},Kt.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h)},Kt.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.line.id;if(e.properties.active=n?m:v,!n)return r(e);e.geometry.coordinates.length<2||(e.properties.meta=g,r(Ht(t.line.id,e.geometry.coordinates["forward"===t.direction?e.geometry.coordinates.length-2:1],""+("forward"===t.direction?e.geometry.coordinates.length-2:1),!1)),r(e))};const Qt=Kt;function Wt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,i,o=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return te(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return te(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function te(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ee(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function re(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var ne=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ee(Object(r),!0).forEach((function(e){re(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ee(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},Qt);ne.onSetup=function(t){var e=this,r=this.newFeature({type:c,properties:{},geometry:{type:p,coordinates:[[]]}}),n=this.newFeature($t(Vt)),i=this.newFeature($t(Bt));this.addFeature(r),this.addFeature(n),this.addFeature(i);var o=this.getSelected();this.clearSelectedFeatures(),b.disable(this);var a=Wt(Xt(this.map,this._ctx.api,r),2),s=a[0],l=a[1],u={map:this.map,line:r,currentVertexPosition:0,vertices:l,snapList:s,selectedFeatures:o,verticalGuide:n,horizontalGuide:i,direction:"forward"};u.options=this._ctx.options;var f=function(){var t=Wt(Xt(e.map,e._ctx.api,r),2),n=t[0],i=t[1];u.vertices=i,u.snapList=n};u.moveendCallback=f;var h=function(t){u.options=t};return u.optionsChangedCallBAck=h,this.map.on("moveend",f),this.map.on("draw.snap.options_changed",h),u},ne.onClick=function(t){var e=t.snappedLng,r=t.snappedLat;if(t.currentVertexPosition>0){var n=t.line.coordinates[t.currentVertexPosition-1];if(t.lastVertex=n,n[0]===e&&n[1]===r)return this.changeMode(h,{featureIds:[t.line.id]})}Yt(t.map,t.vertices,{lng:e,lat:r}),t.line.updateCoordinate(t.currentVertexPosition,e,r),t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e,r)},ne.onMouseMove=function(t,e){var n=Ut(t,e),o=n.lng,a=n.lat;t.line.updateCoordinate(t.currentVertexPosition,o,a),t.snappedLng=o,t.snappedLat=a,t.lastVertex&&t.lastVertex[0]===o&&t.lastVertex[1]===a?this.updateUIClasses({mouse:i}):this.updateUIClasses({mouse:r})},ne.toDisplayFeatures=function(t,e,r){Gt(t,e)||Qt.toDisplayFeatures(t,e,r)},ne.onStop=function(t){this.deleteFeature(Vt,{silent:!0}),this.deleteFeature(Bt,{silent:!0}),this.map.off("moveend",t.moveendCallback),Qt.onStop.call(this,t)};const ie=ne,oe={onSetup:function(){const t=this.newFeature({type:c,properties:{},geometry:{type:u,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),b.disable(this),this.updateUIClasses({mouse:r}),this.activateUIButton(a),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&Zt(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(h,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:r}),t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(`0.${t.currentVertexPosition}`,e.lngLat.lng,e.lngLat.lat),w(e)&&this.updateUIClasses({mouse:i})}};oe.onTap=oe.onClick=function(t,e){return w(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},oe.onKeyUp=function(t,e){x(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h)):M(e)&&this.changeMode(h,{featureIds:[t.polygon.id]})},oe.onStop=function(t){this.updateUIClasses({mouse:o}),b.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(`0.${t.currentVertexPosition}`),t.polygon.isValid()?this.map.fire(d,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h,{},{silent:!0})))},oe.toDisplayFeatures=function(t,e,r){const n=e.properties.id===t.polygon.id;if(e.properties.active=n?m:v,!n)return r(e);if(0===e.geometry.coordinates.length)return;const i=e.geometry.coordinates[0].length;if(!(i<3)){if(e.properties.meta=g,r(Ht(t.polygon.id,e.geometry.coordinates[0][0],"0.0",!1)),i>3){const n=e.geometry.coordinates[0].length-3;r(Ht(t.polygon.id,e.geometry.coordinates[0][n],`0.${n}`,!1))}if(i<=4){const t=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(r({type:c,properties:e.properties,geometry:{coordinates:t,type:p}}),3===i)return}return r(e)}},oe.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h)};const ae=oe;function se(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,i,o=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return le(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return le(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function le(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ce(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function ue(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var pe=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ce(Object(r),!0).forEach((function(e){ue(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ce(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},ae);pe.onSetup=function(t){var e=this,r=this.newFeature({type:c,properties:{},geometry:{type:u,coordinates:[[]]}}),n=this.newFeature($t(Vt)),i=this.newFeature($t(Bt));this.addFeature(r),this.addFeature(n),this.addFeature(i);var o=this.getSelected();this.clearSelectedFeatures(),b.disable(this);var a=se(Xt(this.map,this._ctx.api,r),2),s=a[0],l=a[1],p={map:this.map,polygon:r,currentVertexPosition:0,vertices:l,snapList:s,selectedFeatures:o,verticalGuide:n,horizontalGuide:i};p.options=this._ctx.options;var f=function(){var t=se(Xt(e.map,e._ctx.api,r),2),n=t[0],i=t[1];p.vertices=i,p.snapList=n};p.moveendCallback=f;var h=function(t){p.options=t};return p.optionsChangedCallBAck=h,this.map.on("moveend",f),this.map.on("draw.snap.options_changed",h),p},pe.onClick=function(t){var e=t.snappedLng,r=t.snappedLat;if(t.currentVertexPosition>0){var n=t.polygon.coordinates[0][t.currentVertexPosition-1];if(t.lastVertex=n,n[0]===e&&n[1]===r)return this.changeMode(h,{featureIds:[t.polygon.id]})}Yt(t.map,t.vertices,{lng:e,lat:r}),t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),e,r),t.currentVertexPosition++,t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),e,r)},pe.onMouseMove=function(t,e){var n=Ut(t,e),o=n.lng,a=n.lat;t.polygon.updateCoordinate("0.".concat(t.currentVertexPosition),o,a),t.snappedLng=o,t.snappedLat=a,t.lastVertex&&t.lastVertex[0]===o&&t.lastVertex[1]===a?this.updateUIClasses({mouse:i}):this.updateUIClasses({mouse:r})},pe.toDisplayFeatures=function(t,e,r){Gt(t,e)||ae.toDisplayFeatures(t,e,r)},pe.onStop=function(t){this.deleteFeature(Vt,{silent:!0}),this.deleteFeature(Bt,{silent:!0}),this.map.off("moveend",t.moveendCallback),this.map.off("draw.snap.options_changed",t.optionsChangedCallBAck),ae.onStop.call(this,t)};const fe=pe;function he(t){return function(t){if(Array.isArray(t))return de(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return de(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return de(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function de(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function ge(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function ye(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ge(Object(r),!0).forEach((function(e){me(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ge(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function me(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var ve=[{id:"gl-draw-polygon-fill-inactive",type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],paint:{"fill-color":"#3bb2d0","fill-outline-color":"#3bb2d0","fill-opacity":.1}},{id:"gl-draw-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.1}},{id:"gl-draw-polygon-midpoint",type:"circle",filter:["all",["==","$type","Point"],["==","meta","midpoint"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-stroke-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-polygon-stroke-active",type:"line",filter:["all",["==","active","true"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-line-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-line-active",type:"line",filter:["all",["==","$type","LineString"],["==","active","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-stroke-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-color":"#fff"}},{id:"gl-draw-polygon-and-line-vertex-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-point-point-stroke-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-opacity":1,"circle-color":"#fff"}},{id:"gl-draw-point-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#3bb2d0"}},{id:"gl-draw-point-stroke-active",type:"circle",filter:["all",["==","$type","Point"],["==","active","true"],["!=","meta","midpoint"]],paint:{"circle-radius":7,"circle-color":"#fff"}},{id:"gl-draw-point-active",type:"circle",filter:["all",["==","$type","Point"],["!=","meta","midpoint"],["==","active","true"]],paint:{"circle-radius":5,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-fill-static",type:"fill",filter:["all",["==","mode","static"],["==","$type","Polygon"]],paint:{"fill-color":"#404040","fill-outline-color":"#404040","fill-opacity":.1}},{id:"gl-draw-polygon-stroke-static",type:"line",filter:["all",["==","mode","static"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","mode","static"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-point-static",type:"circle",filter:["all",["==","mode","static"],["==","$type","Point"]],paint:{"circle-radius":5,"circle-color":"#404040"}}].map((function(t){return"gl-draw-line-inactive"===t.id?ye(ye({},t),{},{filter:[].concat(he(t.filter),[["!=","user_isSnapGuide","true"]])}):t}));const be=[].concat(he(ve),[{id:"guide",type:"line",filter:["all",["==","$type","LineString"],["==","user_isSnapGuide","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#c00c00","line-width":1,"line-dasharray":[5,5]}}]);return e})()}));
//# sourceMappingURL=mapbox-gl-draw-snap-mode.js.map